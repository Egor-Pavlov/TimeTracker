openapi: 3.0.1
info:
  title: Time Tracker API
  description: API для управления пользователями, задачами и трекингом времени.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /api/users/new:
    post:
      summary: Создать пользователя трекинга
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
              example:
                username: tester
                email: a@a.ru
      responses:
        200:
          description: Пользователь успешно создан

  /api/users/list:
    get:
      summary: Получить список пользователей трекинга
      responses:
        200:
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userID:
                      type: integer
                    userName:
                      type: string
                    userEmailAddress:
                      type: string
              example:
                - userID: 1
                  userName: Alice
                  userEmailAddress: alice@example.com
                - userID: 2
                  userName: Bob
                  userEmailAddress: bob@example.com
                - userID: 3
                  userName: Charlie
                  userEmailAddress: charlie@example.com

  /api/user/update:
    post:
      summary: Изменить данные пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userID:
                  type: integer
                username:
                  type: string
                email:
                  type: string
              example:
                userID: 1
                username: tester123
                email: a123@a.ru
      responses:
        200:
          description: Данные пользователя успешно изменены

  /api/tasks/new:
    post:
      summary: Добавить задачу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                description:
                  type: string
              example:
                theme: bug
                description: bherjhjksmvsv1234
      responses:
        200:
          description: Задача успешно добавлена

  /api/tasks/list:
    get:
      summary: Получить список задач
      responses:
        200:
          description: Список задач
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    taskID:
                      type: integer
                    creationDate:
                      type: string
                      format: date-time
                    taskTheme:
                      type: string
                    taskDescription:
                      type: string
              example:
                - taskID: 1
                  creationDate: "2024-04-15T02:00:00.000+00:00"
                  taskTheme: "Bug Не создаются привязки"
                  taskDescription: "При инициализации ТД не создаются привязки"
                - taskID: 2
                  creationDate: "2024-03-10T02:00:00.000+00:00"
                  taskTheme: "Актуализировать скрипт инсталятор"
                  taskDescription: "Убрать логику удаления томката"

  /api/user/tracking/start:
    post:
      summary: Начать отсчет времени по задаче
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                taskId:
                  type: integer
              example:
                userId: 1
                taskId: 1
      responses:
        200:
          description: Отсчет времени успешно начат

  /api/user/tracking/stop:
    post:
      summary: Прекратить отсчет времени по задаче
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                taskId:
                  type: integer
              example:
                userId: 1
                taskId: 1
      responses:
        200:
          description: Отсчет времени успешно прекращен

  /api/tracking/list:
    get:
      summary: Получить весь трекинг времени всех пользователей
      responses:
        200:
          description: Список трекинга времени
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      type: integer
                    taskId:
                      type: integer
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
                    duration:
                      type: number
              example:
                - id: 9
                  userId: 1
                  taskId: 1
                  startTime: "2024-05-15T02:00:00.000+00:00"
                  endTime: "2024-05-15T04:00:00.000+00:00"
                  duration: 2
                - id: 10
                  userId: 1
                  taskId: 1
                  startTime: "2024-05-14T02:00:00.000+00:00"
                  endTime: "2024-05-14T04:00:00.000+00:00"
                  duration: 2
                - id: 11
                  userId: 1
                  taskId: 2
                  startTime: "2024-05-16T03:00:00.000+00:00"
                  endTime: "2024-05-16T05:00:00.000+00:00"
                  duration: 2
                - id: 12
                  userId: 2
                  taskId: 2
                  startTime: "2024-05-15T06:00:00.000+00:00"
                  endTime: "2024-05-15T10:00:00.000+00:00"
                  duration: 4

  /api/user/tracking/durations/period:
    get:
      summary: Показать все трудозатраты пользователя за период
      parameters:
        - in: query
          name: userID
          schema:
            type: integer
          required: true
          description: ID пользователя
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          required: true
          description: Начало периода
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          required: true
          description: Конец периода
      responses:
        200:
          description: Список трудозатрат
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    taskId:
                      type: integer
                    totalDuration:
                      type: number
              example:
                - taskId: 1
                  totalDuration: 1.0

  /api/user/tracking/intervals/period:
    get:
      summary: Показать все временные интервалы занятые работой за период
      parameters:
        - in: query
          name: userID
          schema:
            type: integer
          required: true
          description: ID пользователя
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          required: true
          description: Начало периода
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          required: true
          description: Конец периода
      responses:
        200:
          description: Список временных интервалов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    taskID:
                      type: integer
                    theme:
                      type: string
                    description:
                      type: string
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
              example:
                - taskID: 1
                  theme: "Project A"
                  description: "Work on project A"
                  startTime: "2024-05-30T04:00:00.000+00:00"
                  endTime: "2024-05-30T06:00:00.000+00:00"
                - taskID: 1
                  theme: "Project A"
                  description: "Work on project A"
                  startTime: "2024-05-30T01:21:05.000+00:00"
                  endTime: "2024-05-30T03:21:05.000+00:00"

  /api/user/tracking/sum/period:
    get:
      summary: Получить сумму трудозатрат пользователя за период
      parameters:
        - in: query
          name: userID
          schema:
            type: integer
          required: true
          description: ID пользователя
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          required: true
          description: Начало периода
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          required: true
          description: Конец периода
      responses:
        '200':
          description: Сумма трудозатрат пользователя за период
          content:
            application/json:
              schema:
                type: number
              example: 3

  /api/user/delete:
    delete:
      summary: Удалить всю информацию о пользователе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              example:
                userId: 1
      responses:
        '200':
          description: Успешное удаление
          content:
            text/plain:
              schema:
                type: string
              example: Deleted 1 rows

  /api/user/tracking/delete:
    delete:
      summary: Очистить данные трекинга пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              example:
                userId: 1
      responses:
        '200':
          description: Успешное удаление
          content:
            text/plain:
              schema:
                type: string
              example: Deleted 2 rows